library ieee;
  use ieee.std_logic_1164.all;
  use ieee.std_logic_arith.all;
  use ieee.std_logic_unsigned.all;

entity proba1 is
  port (
    clk : in  std_logic;
    btn : in  std_logic_vector(4  downto 0);
    sw  : in  std_logic_vector(15 downto 0);
    led : out std_logic_vector(15 downto 0);
    an  : out std_logic_vector(7  downto 0);
    cat : out std_logic_vector(6  downto 0)
  );
end entity proba1;

architecture behavioral of proba1 is  
    component ssd is
           Port ( clk : in std_logic;
           input: in  std_logic_vector(0 to 31);
           o_cat: out std_logic_vector(0 to 6);
           o_an : out std_logic_vector(0 to 7));
    end component;
    signal count : std_logic_vector(0 to 31);
begin

    ssd : ssd port map( clk, count, cat, an);
  
  
 
      process(btn)
        begin
            if ( btn(0) = '1' ) then count <= count + 1;
          end if;
       end process;
  
  input <= count;
  
  led <= sw;
  an  <= "000" & btn(4 downto 0);
  cat <= (others => '0');

end architecture behavioral; 
